// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisualMoodTracker.Contexts;

namespace VisualMoodTracker.Migrations
{
    [DbContext(typeof(ImageContext))]
    partial class ImageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VisualMoodTracker.Models.Face", b =>
                {
                    b.Property<int>("FaceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Anger");

                    b.Property<float>("Contempt");

                    b.Property<float>("Disgust");

                    b.Property<float>("Fear");

                    b.Property<float>("Happiness");

                    b.Property<float>("Height");

                    b.Property<int>("ImageId");

                    b.Property<float>("Left");

                    b.Property<float>("Neutral");

                    b.Property<float>("Sadness");

                    b.Property<float>("Surprise");

                    b.Property<float>("Top");

                    b.Property<float>("Width");

                    b.HasKey("FaceId");

                    b.HasIndex("ImageId");

                    b.ToTable("Faces");
                });

            modelBuilder.Entity("VisualMoodTracker.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .HasMaxLength(400);

                    b.Property<float>("Height");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<int>("SessionId");

                    b.Property<float>("Width");

                    b.HasKey("ImageId");

                    b.HasIndex("SessionId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("VisualMoodTracker.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description")
                        .HasMaxLength(400);

                    b.Property<string>("Name")
                        .HasMaxLength(400);

                    b.HasKey("SessionId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("VisualMoodTracker.Models.SessionTag", b =>
                {
                    b.Property<int>("SessionId");

                    b.Property<int>("TagId");

                    b.HasKey("SessionId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("SessionTag");
                });

            modelBuilder.Entity("VisualMoodTracker.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(400);

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("VisualMoodTracker.Models.Face", b =>
                {
                    b.HasOne("VisualMoodTracker.Models.Image", "Image")
                        .WithMany("Faces")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualMoodTracker.Models.Image", b =>
                {
                    b.HasOne("VisualMoodTracker.Models.Session", "Session")
                        .WithMany("Images")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VisualMoodTracker.Models.SessionTag", b =>
                {
                    b.HasOne("VisualMoodTracker.Models.Session", "Session")
                        .WithMany("SessionTags")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VisualMoodTracker.Models.Tag", "Tag")
                        .WithMany("SessionTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
